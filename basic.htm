<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport">
        <title>Cubo</title>

        <link rel='stylesheet'   type='text/css' href='index-style.css'>
    </head>
    <body>

        <div class="mov">

            
            <div class="mov2">
                <button id="rotarx">Rotar eje X rebanada izquierda</button>
            </div>

            <div class="mov2">
                <button id="rotary">Rotar eje Y rebanada arriba</button>
            </div>

            <div class="mov2">
                <button id="rotarz">Rotar eje Z rebanada delante</button>
            </div>
        </div>
        <br>
        <div class="mov">

            
            <div class="mov2">
                <button id="rotarx1">Rotar eje X rebanada centro</button>
            </div>

            <div class="mov2">
                <button id="rotary1">Rotar eje Y rebanada centro</button>
            </div>

            <div class="mov2">
                <button id="rotarz1">Rotar eje Z rebanada centro</button>
            </div>
        </div>
        <br>
        <div class="mov">

            
            <div class="mov2">
                <button id="rotarx2">Rotar eje X rebanada derecha</button>
            </div>

            <div class="mov2">
                <button id="rotary2">Rotar eje Y rebanada abajo</button>
            </div>

            <div class="mov2">
                <button id="rotarz2">Rotar eje Z rebanada detras</button>
            </div>
        </div>
       
        
        <canvas id="glcanvas" width="500" height="500"></canvas>

    
    </body>

    
    
    <script id="vertex-shader-3d" type="x-shader/x-vertex">
        attribute vec4 a_position;
         
        uniform mat4 u_matrix;
        attribute vec4 a_color;
        varying vec4 v_color;
         
        void main() {
          // Multiply the position by the matrix.
          gl_Position = u_matrix * a_position;
          v_color = a_color;
        }
    </script>
       
    <script id="fragment-shader-2d" type="notjs">
       
        // los sombreadores de fragmentos no tienen una precisi√≥n predeterminada, por lo que necesitamos
        // para elegir uno. mediump es un buen valor predeterminado
        precision mediump float;
        varying vec4 v_color;

        void main() {
            gl_FragColor = v_color;
        }
       
    </script>

    <script src="vec-mat.js"></script>
    <script src="cubo.js"></script>
    <script src="cubo_rubix.js"></script>
</html>